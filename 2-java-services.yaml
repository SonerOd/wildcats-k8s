# ============= ACCOUNT (8081) =============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wildcats-account
  namespace: appdynamics-demo
  labels: { app: wildcats-account }
spec:
  replicas: 2
  selector:
    matchLabels: { app: wildcats-account }
  template:
    metadata:
      labels: { app: wildcats-account }
    spec:
      containers:
        - name: app
          image: odztech/wildcats-account:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 -XX:+UseContainerSupport -XX:+UseG1GC"
          startupProbe:
            httpGet: { path: /actuator/health, port: 8081 }
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 18   # ~3 dakika warmup toleransÄ±
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8081 }
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8081 }
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "1Gi" }
---
apiVersion: v1
kind: Service
metadata:
  name: wildcats-account
  namespace: appdynamics-demo
spec:
  selector: { app: wildcats-account }
  ports:
    - port: 8081
      targetPort: 8081
---
# ============= CREDIT-CHECK (8082) =============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wildcats-credit-check
  namespace: appdynamics-demo
  labels: { app: wildcats-credit-check }
spec:
  replicas: 2
  selector:
    matchLabels: { app: wildcats-credit-check }
  template:
    metadata:
      labels: { app: wildcats-credit-check }
    spec:
      containers:
        - name: app
          image: odztech/wildcats-credit-check:1.0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 -XX:+UseContainerSupport -XX:+UseG1GC"
          startupProbe:
            httpGet: { path: /actuator/health, port: 8082 }
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 18
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8082 }
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8082 }
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "1Gi" }
---
apiVersion: v1
kind: Service
metadata:
  name: wildcats-credit-check
  namespace: appdynamics-demo
spec:
  selector: { app: wildcats-credit-check }
  ports:
    - port: 8082
      targetPort: 8082
---
# ============= LOAN (8083) =============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wildcats-loan
  namespace: appdynamics-demo
  labels: { app: wildcats-loan }
spec:
  replicas: 2
  selector:
    matchLabels: { app: wildcats-loan }
  template:
    metadata:
      labels: { app: wildcats-loan }
    spec:
      containers:
        - name: app
          image: odztech/wildcats-loan:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 -XX:+UseContainerSupport -XX:+UseG1GC"
          startupProbe:
            httpGet: { path: /actuator/health, port: 8083 }
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 18
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8083 }
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8083 }
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "1Gi" }
---
apiVersion: v1
kind: Service
metadata:
  name: wildcats-loan
  namespace: appdynamics-demo
spec:
  selector: { app: wildcats-loan }
  ports:
    - port: 8083
      targetPort: 8083
---
# ============= TRANSACTION (8084) =============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wildcats-transaction
  namespace: appdynamics-demo
  labels: { app: wildcats-transaction }
spec:
  replicas: 2
  selector:
    matchLabels: { app: wildcats-transaction }
  template:
    metadata:
      labels: { app: wildcats-transaction }
    spec:
      containers:
        - name: app
          image: odztech/wildcats-transaction:1.0.11
          imagePullPolicy: Always
          ports:
            - containerPort: 8084
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 -XX:+UseContainerSupport -XX:+UseG1GC"
          startupProbe:
            httpGet: { path: /actuator/health, port: 8084 }
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 18
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8084 }
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8084 }
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "1Gi" }
---
apiVersion: v1
kind: Service
metadata:
  name: wildcats-transaction
  namespace: appdynamics-demo
spec:
  selector: { app: wildcats-transaction }
  ports:
    - port: 8084
      targetPort: 8084
---
# ============= REPORT (8085) =============
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wildcats-report
  namespace: appdynamics-demo
  labels: { app: wildcats-report }
spec:
  replicas: 2
  selector:
    matchLabels: { app: wildcats-report }
  template:
    metadata:
      labels: { app: wildcats-report }
    spec:
      containers:
        - name: app
          image: odztech/wildcats-report:1.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8085
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:MaxRAMPercentage=75.0 -XX:+UseContainerSupport -XX:+UseG1GC"
          startupProbe:
            httpGet: { path: /actuator/health, port: 8085 }
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 18
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8085 }
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8085 }
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "1Gi" }
---
apiVersion: v1
kind: Service
metadata:
  name: wildcats-report
  namespace: appdynamics-demo
spec:
  selector: { app: wildcats-report }
  ports:
    - port: 8085
      targetPort: 8085
